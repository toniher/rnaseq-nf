/*
 * Copyright (c) 2020-2021, Seqera Labs.
 * Copyright (c) 2013-2019, Centre for Genomic Regulation (CRG).
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code Form is "Incompatible With Secondary Licenses", as
 * defined by the Mozilla Public License, v. 2.0.
 *
 */
 
manifest {
  description = 'Proof of concept of a RNA-seq pipeline implemented with Nextflow' 
  author = 'Paolo Di Tommaso'
  nextflowVersion = '>=22.10.0'
}

/* 
 * default params 
 */
 
params.reads = "$baseDir/data/ggal/ggal_gut_{1,2}.fq"
params.transcriptome = "$baseDir/data/ggal/ggal_1_48850000_49020000.Ggal71.500bpflank.fa"
params.outdir = "results"
params.multiqc = "$baseDir/multiqc"

/* 
 * defines execution profiles for different environments  
 */ 

profiles {
  standard {
    process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
  }
  
  docker {
    process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
    docker.enabled = true
  }

  singularity {
    process.container = 'quay.io/nextflow/rnaseq-nf:latest'
    singularity.enabled = true
    singularity.cacheDir = "$baseDir/singularity"
  }
  
  
  sge {
    process.container = 'quay.io/nextflow/rnaseq-nf:latest'
    process.executor = 'sge'
    singularity.enabled = true
    singularity.cacheDir = "$baseDir/singularity"
  }
  

  slurm {
    process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
    process.executor = 'slurm'
    singularity.enabled = true
  }
  
  batch {
    params.reads = 's3://rnaseq-nf/data/ggal/lung_{1,2}.fq'
    params.transcriptome = 's3://rnaseq-nf/data/ggal/transcript.fa'
    process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
    process.executor = 'awsbatch'
    process.queue = 'nextflow-ci'
    workDir = 's3://nextflow-ci/work'
    aws.region = 'eu-west-1'
    aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
  }

  's3-data' {
    process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
    params.reads = 's3://rnaseq-nf/data/ggal/lung_{1,2}.fq'
    params.transcriptome = 's3://rnaseq-nf/data/ggal/transcript.fa'
  } 

  gls {
      params.transcriptome = 'gs://rnaseq-nf/data/ggal/transcript.fa'
      params.reads = 'gs://rnaseq-nf/data/ggal/gut_{1,2}.fq'
      params.multiqc = 'gs://rnaseq-nf/multiqc'
      process.executor = 'google-lifesciences'
      process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
      workDir = 'gs://rnaseq-nf/scratch' // <- replace with your own bucket!
      google.region  = 'europe-west2'
  } 
  
  gcb {
      params.transcriptome = 'gs://rnaseq-nf/data/ggal/transcript.fa'
      params.reads = 'gs://rnaseq-nf/data/ggal/gut_{1,2}.fq'
      params.multiqc = 'gs://rnaseq-nf/multiqc'
      process.executor = 'google-batch'
      process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
      workDir = 'gs://rnaseq-nf/scratch' // <- replace with your own bucket!
      google.region  = 'europe-west2'
  }

  'gs-data' {
      process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
      params.transcriptome = 'gs://rnaseq-nf/data/ggal/transcript.fa'
      params.reads = 'gs://rnaseq-nf/data/ggal/gut_{1,2}.fq'
  }

  azb {
    process.container = 'quay.io/nextflow/rnaseq-nf:v1.1'
    workDir = 'az://nf-scratch/work'
    process.executor = 'azurebatch'
    process.queue = 'nextflow-ci' // replace with your own Azure pool name

    azure {
      batch {
        location = 'westeurope'
        accountName = "$AZURE_BATCH_ACCOUNT_NAME" 
        accountKey = "$AZURE_BATCH_ACCOUNT_KEY"
        autoPoolMode = true
        deletePoolsOnCompletion = true
      }

      storage {
        accountName = "$AZURE_STORAGE_ACCOUNT_NAME"
        accountKey = "$AZURE_STORAGE_ACCOUNT_KEY"
      }
    }
  }

  conda {
    process.conda = "$baseDir/conda.yml"
  }  
}
